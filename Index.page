Title="Unraid Bluetooth Manager"
---
<?php

$btmName = 'UnraidBluetoothManager';

?>

<style>
    .btm-container {
        display: flex;
        flex-direction: column;
    }

        .btm-container .btm-row {
            display: flex;
            flex: 1;
        }

            .btm-container .btm-row .btm-column:first-of-type {
                margin-left: 0px;
            }

            .btm-container .btm-row .btm-column {
                flex: 1;
                border: 1px solid #e3e3e3;
                padding: 10px;
                margin: 0px 5px;
            }

        .btm-container .btm-title {
            font-weight: bold;
            font-size: 1.2em;
            display: block;
            margin-bottom: 10px;
        }

        .btm-container ul {
            list-style-type: none;
            padding: 0px;
            margin: 0px;
        }

            .btm-container ul li {
                display: flex;
                justify-content: start;
                align-items: center;
                cursor: pointer
            }

                .btm-container ul li input, .btm-container ul li .name {
                    margin: 3px 3px 0px 5px;
                }

                .btm-container ul li input {
                }

                .btm-container ul li .name {
                    flex: 1;
                }

                .btm-container ul li .status {
                    width: 11px;
                    height: 11px;
                    border-radius: 50%;
                    margin: 3px 3px 0px 5px;
                    padding: 0px;
                }

                .btm-container ul li.connected .status {
                    background-color: green;
                }

                .btm-container ul li.disconnected .status {
                    background-color: red;
                }
</style>

<div class="btm-container">
    <!--<div class="btm-row">
        <div class="btm-column">
            <button type="button" onclick="enableScan();">Start Scan</button>
        </div>
        <div class="btm-column">
            <button type="button" onclick="disableScan();">Stop Scan</button>
        </div>
        <div class="btm-column">
            <button type="button" onclick="detectDevices();">Get Devices</button>
        </div>
    </div>-->
    <div class="btm-row">
        <div class="btm-column">
            <ul id="message-panel"></ul>
        </div>
    </div>
    <div class="btm-row">
        <div class="btm-column">
            <span class="btm-title">Paired Devices</span>
            <ul id="paired-devices"></ul>
        </div>
        <div class="btm-column">
            <span class="btm-title">Available Devices</span>
            <ul id="available-devices"></ul>
        </div>
    </div>
    <div class="btm-row">
        <button id="disconnect" type="button" onclick="disconnect();" style="display:none;">Disconnect</button>
    </div>
    <div class="btm-row">
        <input type="text" id="connect-id" />
        <button id="disconnect" type="button" onclick="connect();">Connect</button>
    </div>
</div>

<script>
    let functions = '/plugins/<?= $btmName ?>/Functions.php'
    let macRegex = /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/;
    let pollTime = 1000;

    function connect() {
        let deviceId = $('#connect-id').val();
        let data = {
            id: deviceId,
            method: 'connect'
        };

        $('div.spinner').show();

        $.post(functions, data, (response) => {

            alert(`${response}`);

            $('div.spinner').hide();
        });
    }

    function disconnect() {
        let selectedDeviceId = $('input[type="radio"][name="paired"]:checked').val();
        let data = {
            id: selectedDeviceId,
            method: 'disconnect'
        };

        $('div.spinner').show();

        $.post(functions, data, (response) => {
            if (response != null) {
                $(`input[value="${response}"]`).parent().remove();
            }

            alert(`${response}`);

            $('div.spinner').hide();
        });
    }

    function detectDevices() {
        let pairedDeviceList = $('#paired-devices');
        let availableDeviceList = $('#available-devices');
        let availableDevices = JSON.parse(window.localStorage.getItem('bluetooth-devices'));

        let detectDevicesRequest = {
            method: 'devices'
        };

        $.get(functions, detectDevicesRequest, (response) => {
            let detectedDevices = JSON.parse(response);

            detectedDevices.forEach((detectedDevice) => {
                let device = detectedDevice.split(" ");
                let deviceId = device[1];
                let deviceExists = $(`input[value="${deviceId}"]`).length > 0;
                let hasName = macRegex.test(device.slice(2).join(" "));

                if (!hasName) {
                    if (!deviceExists) {
                        let deviceInfoRequest = {
                            id: deviceId,
                            method: 'deviceinfo'
                        };

                        $.post(functions, deviceInfoRequest, (response) => {
                            let deviceInfo = JSON.parse(response.replaceAll("\\t", ""));
                            let deviceName = device.slice(2).join(" ");
                            let connected = searchDeviceInfo('Connected', deviceInfo);
                            let paired = searchDeviceInfo('Paired', deviceInfo);
                            let trusted = searchDeviceInfo('Trusted', deviceInfo);

                            if (paired) {
                                pairedDeviceList.append(`
                                <li class="${connected ? 'connected' : 'disconnected'}" onclick="toggleDeviceSelection(event)">
                                    <span class="status"></span>
                                    <input type="radio" name="paired" value="${deviceId}" />
                                    <span class="name">${deviceName} (${deviceId})</span>
                                </li>`);
                            }
                            else {
                                availableDeviceList.append(`
                                <li onclick="toggleDeviceSelection(event)">
                                    <input type="radio" name="paired" value="${deviceId}" />
                                    <span class="name">${deviceName} (${deviceId})</span>
                                </li>`);
                            }
                        });

                        availableDevices.push(deviceId);
                    }
                }
            });

            //startExistingDeviceIds.forEach((startExistingDeviceId) => {
            //    if (!existingDeviceIds.includes(startExistingDeviceId)) {
            //        let listItem = $(`#available-devices li [input="${startExistingDeviceId}"]`).parent();
            //
            //        availableDeviceList.remove(listItem)
            //    }
            //});
        });
    }

    function searchDeviceInfo(value, deviceInfo) {
        for (var i = 0; i < deviceInfo.length; i++) {
            if (deviceInfo[i].match(value)) {
                return deviceInfo[i].split(': ')[1] == "yes";
            }
        }
        return -1;
    }

    function enableScan() {
        let scanRequest = {
            method: 'startscan'
        };

        window.localStorage.setItem('bluetooth-devices', []);

        $.get(functions, scanRequest, (response) => {
            logEvent(response);

            detectDevices();

            setInterval(() => {
                detectDevices();
            }, pollTime);
        });
    }

    function disableScan() {
        window.localStorage.setItem('bluetooth-devices', []);

        $.get(functions, { method: 'stopscan' }, (response) => {
            logEvent(response);
        });
    }

    function toggleDeviceSelection(event) {
        let button = $(event.currentTarget);
        let radio = button.find('input');

        if (radio.hasClass('checked')) {
            $('#disconnect').hide();

            radio
                .prop('checked', false)
                .removeClass('checked');
        }
        else {
            $('#disconnect').show();

            radio
                .prop('checked', true)
                .addClass('checked');
        }
    }

    function logEvent(message) {
        let timestamp = new Date().toLocaleString().replace(',', '');

        $('#message-panel').append(`<li>
            <span class="timestamp">${timestamp}: </span>
            <span class="message">${message}</span>
        </li>`);
    }

    $(function () {
        enableScan();

        window.onbeforeunload = () => {
            disableScan();
        }
    });
</script>
